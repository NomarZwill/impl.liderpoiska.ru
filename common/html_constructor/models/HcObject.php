<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\html_constructor\models;


use Yii;

/**
 * This is the base-model class for table "hc_object".
 *
 * @property integer $id
 * @property string $table_name
 * @property integer $row_id
 *
 * @property \common\html_constructor\models\HcObjectFileTarget[] $hcObjectFileTargets
 * @property \common\html_constructor\models\HcObjectSeo[] $hcObjectSeos
 * @property string $aliasModel
 */
class HcObject extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'hc_object';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['row_id'], 'integer'],
            [['table_name'], 'string', 'max' => 255],
            [['table_name', 'row_id'], 'unique', 'targetAttribute' => ['table_name', 'row_id']],
            [['table_name', 'row_id'], 'required']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'table_name' => Yii::t('models', 'Table Name'),
            'row_id' => Yii::t('models', 'Row ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHcObjectFileTargets()
    {
        return $this->hasMany(\common\html_constructor\models\HcObjectFileTarget::class, ['hc_object_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHcObjectSeos()
    {
        return $this->hasMany(\common\html_constructor\models\HcObjectSeo::class, ['hc_object_id' => 'id']);
    }

    public function beforeDelete()
    {
        $objectsToClean = array_merge($this->hcObjectFileTargets, $this->hcObjectSeos);
        foreach ($objectsToClean as $object) {
            if (!$object->delete()) {
                return false;
            }
        }

        return parent::beforeDelete();
    }
}
