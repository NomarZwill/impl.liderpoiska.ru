<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\html_constructor\models;


use Yii;
use common\html_constructor\models\BaseHcObject;
use yii\behaviors\BlameableBehavior;
use yii\helpers\ArrayHelper;

/**
 * This is the base-model class for table "hc_tag".
 *
 * @property integer $id
 * @property string $name
 * @property string $alias
 * @property integer $parent_id
 * @property integer $sort
 * @property integer $created_by
 * @property string $created_at
 * @property integer $updated_by
 * @property string $updated_at
 *
 * @property \common\html_constructor\models\HcDraftTag[] $hcDraftTags
 * @property \common\html_constructor\models\HcDraft[] $hcDrafts
 * @property \common\html_constructor\models\User $createdBy
 * @property \common\html_constructor\models\User $updatedBy
 * @property string $aliasModel
 */
class HcTag extends BaseHcObject
{
    use \common\html_constructor\models\utility\SortableTrait;

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return
            ArrayHelper::merge(
                [
                    'class' => BlameableBehavior::class,
                ],
                $this->sortableModelBehavior()
            );
    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'hc_tag';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'alias'], 'required'],
            [['parent_id', 'sort'], 'integer'],
            [['name', 'alias'], 'string', 'max' => 255],
            [['created_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::class, 'targetAttribute' => ['created_by' => 'id']],
            [['updated_by'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::class, 'targetAttribute' => ['updated_by' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'name' => Yii::t('models', 'Name'),
            'alias' => Yii::t('models', 'Alias'),
            'parent_id' => Yii::t('models', 'Parent ID'),
            'created_by' => Yii::t('models', 'Created By'),
            'created_at' => Yii::t('models', 'Created At'),
            'updated_by' => Yii::t('models', 'Updated By'),
            'updated_at' => Yii::t('models', 'Updated At'),
            'sort' => Yii::t('models', 'Sort'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHcDraftTags()
    {
        return $this->hasMany(\common\html_constructor\models\HcDraftTag::class, ['hc_tag_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHcDrafts()
    {
        return $this->hasMany(\common\html_constructor\models\HcDraft::class, ['id' => 'hc_draft_id'])->viaTable('hc_draft_tag', ['hc_tag_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCreatedBy()
    {
        return $this->hasOne(\common\models\User::class, ['id' => 'created_by']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUpdatedBy()
    {
        return $this->hasOne(\common\models\User::class, ['id' => 'updated_by']);
    }

    public function getUrl()
    {
        return '/blog/tag/' . $this->alias . '/';
    }

}
